---
# Example Usage:
# ansible-playbook -i inventory querytrace1.yml -e pcap_basefile=client_query_trace

- hosts: all
  vars:
    runtime_sec: 30
    client_filter: '192.168.121.27'
    packets_max: '100'
    query_trace_stderr: 'trace.stderr'
    query_trace_txt_file: 'client_query_trace'
    # TODO create query_trace_txt_file combining client_filter
  remote_user: sysadmin
  become: yes
  tasks:
  # start remote tcpdump
  #  cmd = 'nohup sudo timeout "%s" sudo tcpdump -i any udp dst port 53 and src "%s" -c "%d" -tttt -nn 2>"%s" > "%s" &' % (
  #  runtime_sec, client_filter, packets_max, self.query_trace_stderr, self.query_trace_txt_file)
  # command: timeout {{runtime_sec}} sudo tcpdump -i any udp dst port 53 and src "{{client_filter}}" -c {{packets_max}} -w /tmp/{{query_trace_txt_file}} 2>/tmp/{{query_trace_stderr}} 
 
  - name: start tcpdump
  # command: timeout {{runtime_sec}} sudo tcpdump -i any udp dst port 53 and src "{{client_filter}}" -c {{packets_max}} -w /tmp/{{query_trace_txt_file}} 2>/tmp/{{query_trace_stderr}} 
    shell: timeout {{runtime_sec}} sudo tcpdump -i any udp dst port 53 and src "{{client_filter}}" -c {{packets_max}} -tttt -nn 2>/tmp/{{query_trace_stderr}} > /tmp/{{query_trace_txt_file}} 
    ignore_errors: True
    async: 600
    poll: 10

  - pause: seconds={{runtime_sec}} prompt="pause for {{runtime_sec}} seconds or press Ctrl + c then c to continue"

  # - name: kill tcpdump
  #   command: /usr/bin/pkill tcpdump

  # - name: compress capture file
  #   command: gzip {{ pcap_file }} chdir=/tmp

  # - name: copy logs to local boxes webroot
  #   fetch: src=/tmp/{{ pcap_file }}.gz dest=/tmp/ flat=yes

  # - name: remove files from server
  #   file: path=/tmp/{{ pcap_file }}.gz state=absent


